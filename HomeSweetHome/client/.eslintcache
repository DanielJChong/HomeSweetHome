[{"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\index.js":"1","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\App.js":"2","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\reportWebVitals.js":"3","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\UpdateRV.js":"4","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\AddRV.js":"5","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\Home.js":"6","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\components\\RVList.js":"7","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\RVDetails.js":"8","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\RenterDashboard.js":"9","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\ListerDashboard.js":"10","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\components\\ListerRVList.js":"11","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\components\\RVForm.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":691,"mtime":1611895632135,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":2183,"mtime":1611900556361,"results":"17","hashOfConfig":"14"},{"size":1518,"mtime":1611898778246,"results":"18","hashOfConfig":"14"},{"size":814,"mtime":1611956351700,"results":"19","hashOfConfig":"14"},{"size":654,"mtime":1611956963016,"results":"20","hashOfConfig":"14"},{"size":1236,"mtime":1611952502280,"results":"21","hashOfConfig":"14"},{"size":930,"mtime":1611952018473,"results":"22","hashOfConfig":"14"},{"size":962,"mtime":1611952771789,"results":"23","hashOfConfig":"14"},{"size":605,"mtime":1611896591592,"results":"24","hashOfConfig":"14"},{"size":3681,"mtime":1611947245036,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1uver33",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\index.js",[],["58","59"],"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\App.js",[],"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\UpdateRV.js",["60","61"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nimport RVForm from '../components/RVForm';\r\n\r\n\r\nconst Update = props => {\r\n    const { id, } = props;\r\n    const [rv, setRv] = useState();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/rv/' + id)\r\n            .then(res => {\r\n                setRv(res.data);\r\n                setLoaded(true);\r\n            })\r\n    }, [])\r\n    \r\n    const updateRv = rv => {\r\n        axios.put('http://localhost:8000/api/rv/' + id, rv)\r\n            .then(res => navigate(\"/rv/lister\"))\r\n            .catch(err=>{\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr)\r\n            });\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Link to={\"/rv/lister\"}>Back to Dashboard!</Link>\r\n            <h1>Update this RV!</h1>\r\n            <h2></h2>\r\n            {errors.map((err, index) => <p key={index} style={{color: \"red\"}}>{err}</p>)}\r\n            {loaded && (\r\n                <div>\r\n                    <RVForm\r\n                        onSubmitProp={updateRv}\r\n                        initialListerName={rv.listerName}\r\n                        initialContactInfo={rv.contactInfo}\r\n                        initialRvName={rv.rvName}\r\n                        initialRvDescription={rv.rvDescription}\r\n                        initialMainImageUrl={rv.mainImageUrl}\r\n                        initialPrice={rv.price}\r\n                        initialRvInfo={rv.rvInfo}\r\n                        initialAmenities={rv.amenities}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\AddRV.js",["62"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Link, redirect} from '@reach/router';\r\nimport {navigate} from '@reach/router';\r\n\r\nimport RVForm from '../components/RVForm';\r\n\r\nconst Add = () => {\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const createRV = rv => {\r\n        axios.post('http://localhost:8000/api/rv', rv)\r\n            .then(res=>{\r\n                navigate (\"/rv/lister\");\r\n                \r\n            }) \r\n            .catch(err=>{\r\n                const errorResponse = err.response.data.errors; \r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)) { \r\n                    errorArr.push(errorResponse[key].message)\r\n                    console.log(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>List a new RV!</h1>\r\n            <Link to={\"/rv/lister\"}>Take me back to My Dashboard!</Link>\r\n            {errors.map((err, index) => <p key={index} style={{color: \"red\"}}>{err}</p>)}\r\n            <RVForm\r\n                onSubmitProp={createRV}\r\n                initialListerName=\"\"\r\n                initialContactInfo=\"\"\r\n                initialRvName=\"\"\r\n                initialRvDescription=\"\"\r\n                initialMainImageUrl=\"\"\r\n                initialPrice=\"\"\r\n                initialRvInfo=\"\"\r\n                initialAmenities=\"\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\Home.js",[],"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\components\\RVList.js",["63"],"import React from 'react'\r\nimport { Link } from '@reach/router';\r\nimport './components.css';\r\n\r\nconst RVList = props => {\r\n\r\n    return (\r\n        <div>\r\n            {props.rv.map((rv, idx)=>\r\n                <div>\r\n                    <img src={rv.mainImageUrl} width=\"450\"/><br/>\r\n                    <Link to={\"/rv/\" + rv._id} id=\"listName\">\r\n                        {rv.rvName}\r\n                    </Link>\r\n                    <p>{rv.rvDescription}</p>\r\n                    <p>{rv.rvInfo}</p>\r\n                    <h4 id=\"listPrice\">${rv.price}</h4>\r\n                </div>    \r\n            )}    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RVList;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\RVDetails.js",["64","65"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router';\r\nimport { navigate } from '@reach/router';\r\n\r\n\r\nconst Detail = props => {\r\n    const [rv, setRv] = useState({})\r\n    \r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/rv/\" + props.id)\r\n            .then(res => setRv(res.data))\r\n    }, [])\r\n\r\n    const deleteRv = (rvId) => {\r\n        axios.delete('http://localhost:8000/api/rv/' + rvId)\r\n            .then(res => {\r\n                navigate (\"/rv\")\r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Link to={\"/rv\"}>Back to Dashboard</Link><br/>\r\n            <img src={rv.mainImageUrl} width=\"750\" id=\"detailsImg\"/>\r\n            <h1 id=\"detailsH1\">{rv.rvName}</h1>\r\n            <p>{rv.rvDescription}</p>\r\n            <h3 id=\"detailsH3\">Meet your Host: {rv.listerName}</h3>\r\n            <p id=\"detailsP\">Host contact info: {rv.contactInfo}</p>\r\n            <p>RV Highlights: {rv.rvInfo}</p>\r\n            <p>RV Amenities: {rv.amenities}</p>\r\n            <h3>${rv.price}</h3>\r\n            <button onClick={(e)=>{deleteRv(rv._id)}}>\r\n                Reserve \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\RenterDashboard.js",["66"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nimport RVList from '../components/RVList';\r\n\r\nconst RenterDashboard = () => {\r\n    const [rv, setRv] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/rv')\r\n            .then(res =>{ \r\n                setRv(res.data)\r\n                setLoaded(true);\r\n            });\r\n    }, [])\r\n    \r\n    const removeFromDom = rvId => {\r\n        setRv(rv.filter(rv => rv._id != rvId));\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1 id=\"rdH1\">Great RV's for Rental!</h1>\r\n            <Link to={\"/\"}>Back to Home!</Link>\r\n            <h3 id=\"rdH3\">Super Awesome RV's to choose from!</h3>\r\n            {loaded && <RVList rv={rv} removeFromDom={removeFromDom}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenterDashboard;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\views\\ListerDashboard.js",["67"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nimport ListerRVList from '../components/ListerRVList';\r\n\r\nconst ListerDashboard = () => {\r\n    const [rv, setRv] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/rv')\r\n            .then(res =>{ \r\n                setRv(res.data)\r\n                setLoaded(true);\r\n            });\r\n    }, [])\r\n    \r\n    const removeFromDom = rvId => {\r\n        setRv(rv.filter(rv => rv._id != rvId));\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Link to={\"/\"}>Back to Home!</Link><br/>\r\n            \r\n            <Link to={\"/rv/new\"} >List a new RV!</Link>\r\n            <h1>My RVs that are Listed!</h1>\r\n            {loaded && <ListerRVList rv={rv} removeFromDom={removeFromDom}/>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListerDashboard;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\components\\ListerRVList.js",["68"],"import React from 'react'\r\nimport { Link } from '@reach/router';\r\n\r\nconst ListerRVList = props => {\r\n\r\n    return (\r\n        <div>\r\n            {props.rv.map((rv, idx)=>\r\n                <div>\r\n                    <img src={rv.mainImageUrl} width=\"650\"/><br/>\r\n                    <h2>{rv.rvName}</h2>\r\n                    <Link to={\"/rv/\" + rv._id + \"/edit\"}>\r\n                        Update Info on this RV?\r\n                    </Link> \r\n                    <h4>My listing price: ${rv.price}</h4>\r\n                </div>    \r\n            )}    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListerRVList;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\project\\HomeSweetHome\\client\\src\\components\\RVForm.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":20,"column":8,"nodeType":"75","endLine":20,"endColumn":10,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":40,"column":13,"nodeType":"79","endLine":40,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":3,"column":15,"nodeType":"82","messageId":"83","endLine":3,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":11,"column":21,"nodeType":"79","endLine":11,"endColumn":61},{"ruleId":"73","severity":1,"message":"86","line":13,"column":8,"nodeType":"75","endLine":13,"endColumn":10,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"85","line":25,"column":13,"nodeType":"79","endLine":25,"endColumn":69},{"ruleId":"88","severity":1,"message":"89","line":20,"column":38,"nodeType":"90","messageId":"91","endLine":20,"endColumn":40},{"ruleId":"88","severity":1,"message":"89","line":20,"column":38,"nodeType":"90","messageId":"91","endLine":20,"endColumn":40},{"ruleId":"84","severity":1,"message":"85","line":10,"column":21,"nodeType":"79","endLine":10,"endColumn":61},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["94"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["95"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [id]",{"range":"100","text":"101"},"Update the dependencies array to be: [props.id]",{"range":"102","text":"103"},[573,575],"[id]",[371,373],"[props.id]"]